{"ast":null,"code":"const ANY = Symbol('SemVer ANY');\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY() {\n    return ANY;\n  }\n  constructor(comp, options) {\n    options = parseOptions(options);\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp;\n      } else {\n        comp = comp.value;\n      }\n    }\n    debug('comparator', comp, options);\n    this.options = options;\n    this.loose = !!options.loose;\n    this.parse(comp);\n    if (this.semver === ANY) {\n      this.value = '';\n    } else {\n      this.value = this.operator + this.semver.version;\n    }\n    debug('comp', this);\n  }\n  parse(comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n    const m = comp.match(r);\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`);\n    }\n    this.operator = m[1] !== undefined ? m[1] : '';\n    if (this.operator === '=') {\n      this.operator = '';\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY;\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose);\n    }\n  }\n  toString() {\n    return this.value;\n  }\n  test(version) {\n    debug('Comparator.test', version, this.options.loose);\n    if (this.semver === ANY || version === ANY) {\n      return true;\n    }\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options);\n      } catch (er) {\n        return false;\n      }\n    }\n    return cmp(version, this.operator, this.semver, this.options);\n  }\n  intersects(comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required');\n    }\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      };\n    }\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true;\n      }\n      return new Range(comp.value, options).test(this.value);\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true;\n      }\n      return new Range(this.value, options).test(comp.semver);\n    }\n    const sameDirectionIncreasing = (this.operator === '>=' || this.operator === '>') && (comp.operator === '>=' || comp.operator === '>');\n    const sameDirectionDecreasing = (this.operator === '<=' || this.operator === '<') && (comp.operator === '<=' || comp.operator === '<');\n    const sameSemVer = this.semver.version === comp.semver.version;\n    const differentDirectionsInclusive = (this.operator === '>=' || this.operator === '<=') && (comp.operator === '>=' || comp.operator === '<=');\n    const oppositeDirectionsLessThan = cmp(this.semver, '<', comp.semver, options) && (this.operator === '>=' || this.operator === '>') && (comp.operator === '<=' || comp.operator === '<');\n    const oppositeDirectionsGreaterThan = cmp(this.semver, '>', comp.semver, options) && (this.operator === '<=' || this.operator === '<') && (comp.operator === '>=' || comp.operator === '>');\n    return sameDirectionIncreasing || sameDirectionDecreasing || sameSemVer && differentDirectionsInclusive || oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n  }\n}\nmodule.exports = Comparator;\nconst parseOptions = require('../internal/parse-options');\nconst {\n  re,\n  t\n} = require('../internal/re');\nconst cmp = require('../functions/cmp');\nconst debug = require('../internal/debug');\nconst SemVer = require('./semver');\nconst Range = require('./range');","map":{"version":3,"names":["ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","value","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","module","exports","require"],"sources":["/Users/ujjvalsharma/Desktop/sde-final-project/Tuiter-Project-React/node_modules/semver/classes/comparator.js"],"sourcesContent":["const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}