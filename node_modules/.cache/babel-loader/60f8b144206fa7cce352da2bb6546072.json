{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VersionCheckers = void 0;\nvar semver_1 = require(\"semver\");\nvar get_package_version_1 = require(\"./get-package-version\");\nvar logger_1 = require(\"./logger\");\nvar messages_1 = require(\"./messages\");\nvar logger = logger_1.rootLogger.child({\n  namespace: 'versions'\n});\nexports.VersionCheckers = {\n  jest: createVersionChecker('jest', \">=27.0.0 <28\"),\n  typescript: createVersionChecker('typescript', \">=3.8 <5\"),\n  babelJest: createVersionChecker('babel-jest', \">=27.0.0 <28\"),\n  babelCore: createVersionChecker('@babel/core', \">=7.0.0-beta.0 <8\")\n};\nfunction checkVersion(name, expectedRange, action) {\n  if (action === void 0) {\n    action = 'warn';\n  }\n  var success = true;\n  if (!('TS_JEST_DISABLE_VER_CHECKER' in process.env)) {\n    var version = (0, get_package_version_1.getPackageVersion)(name);\n    success = !!version && (0, semver_1.satisfies)(version, expectedRange);\n    logger.debug({\n      actualVersion: version,\n      expectedVersion: expectedRange\n    }, 'checking version of %s: %s', name, success ? 'OK' : 'NOT OK');\n    if (!action || success) return success;\n    var message = (0, messages_1.interpolate)(version ? \"Version {{actualVersion}} of {{module}} installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version ({{expectedVersion}}). Please do not report issues in ts-jest if you are using unsupported versions.\" : \"Module {{module}} is not installed. If you're experiencing issues, consider installing a supported version ({{expectedVersion}}).\", {\n      module: name,\n      actualVersion: version || '??',\n      expectedVersion: rangeToHumanString(expectedRange)\n    });\n    if (action === 'warn') {\n      logger.warn(message);\n    } else if (action === 'throw') {\n      logger.fatal(message);\n      throw new RangeError(message);\n    }\n  }\n  return success;\n}\nfunction rangeToHumanString(versionRange) {\n  return new semver_1.Range(versionRange).toString();\n}\nfunction createVersionChecker(moduleName, expectedVersion) {\n  var memo;\n  var warn = function () {\n    if (memo !== undefined) return memo;\n    return memo = checkVersion(moduleName, expectedVersion, 'warn');\n  };\n  var raise = function () {\n    return checkVersion(moduleName, expectedVersion, 'throw');\n  };\n  return {\n    raise: raise,\n    warn: warn,\n    forget: function () {\n      memo = undefined;\n    }\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","VersionCheckers","semver_1","require","get_package_version_1","logger_1","messages_1","logger","rootLogger","child","namespace","jest","createVersionChecker","typescript","babelJest","babelCore","checkVersion","name","expectedRange","action","success","process","env","version","getPackageVersion","satisfies","debug","actualVersion","expectedVersion","message","interpolate","module","rangeToHumanString","warn","fatal","RangeError","versionRange","Range","toString","moduleName","memo","undefined","raise","forget"],"sources":["/Users/ujjvalsharma/Desktop/sde-final-project/Tuiter-Project-React/node_modules/ts-jest/dist/utils/version-checkers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VersionCheckers = void 0;\nvar semver_1 = require(\"semver\");\nvar get_package_version_1 = require(\"./get-package-version\");\nvar logger_1 = require(\"./logger\");\nvar messages_1 = require(\"./messages\");\nvar logger = logger_1.rootLogger.child({ namespace: 'versions' });\nexports.VersionCheckers = {\n    jest: createVersionChecker('jest', \">=27.0.0 <28\"),\n    typescript: createVersionChecker('typescript', \">=3.8 <5\"),\n    babelJest: createVersionChecker('babel-jest', \">=27.0.0 <28\"),\n    babelCore: createVersionChecker('@babel/core', \">=7.0.0-beta.0 <8\"),\n};\nfunction checkVersion(name, expectedRange, action) {\n    if (action === void 0) { action = 'warn'; }\n    var success = true;\n    if (!('TS_JEST_DISABLE_VER_CHECKER' in process.env)) {\n        var version = (0, get_package_version_1.getPackageVersion)(name);\n        success = !!version && (0, semver_1.satisfies)(version, expectedRange);\n        logger.debug({\n            actualVersion: version,\n            expectedVersion: expectedRange,\n        }, 'checking version of %s: %s', name, success ? 'OK' : 'NOT OK');\n        if (!action || success)\n            return success;\n        var message = (0, messages_1.interpolate)(version ? \"Version {{actualVersion}} of {{module}} installed has not been tested with ts-jest. If you're experiencing issues, consider using a supported version ({{expectedVersion}}). Please do not report issues in ts-jest if you are using unsupported versions.\" : \"Module {{module}} is not installed. If you're experiencing issues, consider installing a supported version ({{expectedVersion}}).\", {\n            module: name,\n            actualVersion: version || '??',\n            expectedVersion: rangeToHumanString(expectedRange),\n        });\n        if (action === 'warn') {\n            logger.warn(message);\n        }\n        else if (action === 'throw') {\n            logger.fatal(message);\n            throw new RangeError(message);\n        }\n    }\n    return success;\n}\nfunction rangeToHumanString(versionRange) {\n    return new semver_1.Range(versionRange).toString();\n}\nfunction createVersionChecker(moduleName, expectedVersion) {\n    var memo;\n    var warn = function () {\n        if (memo !== undefined)\n            return memo;\n        return (memo = checkVersion(moduleName, expectedVersion, 'warn'));\n    };\n    var raise = function () { return checkVersion(moduleName, expectedVersion, 'throw'); };\n    return {\n        raise: raise,\n        warn: warn,\n        forget: function () {\n            memo = undefined;\n        },\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}