{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = convertDescriptorToString;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\n// See: https://github.com/facebook/jest/pull/5154\nfunction convertDescriptorToString(descriptor) {\n  if (typeof descriptor === 'string' || typeof descriptor === 'number' || descriptor === undefined) {\n    return descriptor;\n  }\n  if (typeof descriptor !== 'function') {\n    throw new Error('describe expects a class, function, number, or string.');\n  }\n  if (descriptor.name !== undefined) {\n    return descriptor.name;\n  } // Fallback for old browsers, pardon Flow\n\n  const stringified = descriptor.toString();\n  const typeDescriptorMatch = stringified.match(/class|function/);\n  const indexOfNameSpace =\n  // @ts-expect-error: typeDescriptorMatch exists\n  typeDescriptorMatch.index + typeDescriptorMatch[0].length;\n  const indexOfNameAfterSpace = stringified.search(/\\(|\\{/);\n  const name = stringified.substring(indexOfNameSpace, indexOfNameAfterSpace);\n  return name.trim();\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","convertDescriptorToString","descriptor","undefined","Error","name","stringified","toString","typeDescriptorMatch","match","indexOfNameSpace","index","length","indexOfNameAfterSpace","search","substring","trim"],"sources":["/Users/ujjvalsharma/Desktop/sde-final-project/Tuiter-Project-React/node_modules/jest-util/build/convertDescriptorToString.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = convertDescriptorToString;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\n// See: https://github.com/facebook/jest/pull/5154\nfunction convertDescriptorToString(descriptor) {\n  if (\n    typeof descriptor === 'string' ||\n    typeof descriptor === 'number' ||\n    descriptor === undefined\n  ) {\n    return descriptor;\n  }\n\n  if (typeof descriptor !== 'function') {\n    throw new Error('describe expects a class, function, number, or string.');\n  }\n\n  if (descriptor.name !== undefined) {\n    return descriptor.name;\n  } // Fallback for old browsers, pardon Flow\n\n  const stringified = descriptor.toString();\n  const typeDescriptorMatch = stringified.match(/class|function/);\n  const indexOfNameSpace = // @ts-expect-error: typeDescriptorMatch exists\n    typeDescriptorMatch.index + typeDescriptorMatch[0].length;\n  const indexOfNameAfterSpace = stringified.search(/\\(|\\{/);\n  const name = stringified.substring(indexOfNameSpace, indexOfNameAfterSpace);\n  return name.trim();\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,yBAAyB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAASA,yBAAyB,CAACC,UAAU,EAAE;EAC7C,IACE,OAAOA,UAAU,KAAK,QAAQ,IAC9B,OAAOA,UAAU,KAAK,QAAQ,IAC9BA,UAAU,KAAKC,SAAS,EACxB;IACA,OAAOD,UAAU;EACnB;EAEA,IAAI,OAAOA,UAAU,KAAK,UAAU,EAAE;IACpC,MAAM,IAAIE,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EAEA,IAAIF,UAAU,CAACG,IAAI,KAAKF,SAAS,EAAE;IACjC,OAAOD,UAAU,CAACG,IAAI;EACxB,CAAC,CAAC;;EAEF,MAAMC,WAAW,GAAGJ,UAAU,CAACK,QAAQ,EAAE;EACzC,MAAMC,mBAAmB,GAAGF,WAAW,CAACG,KAAK,CAAC,gBAAgB,CAAC;EAC/D,MAAMC,gBAAgB;EAAG;EACvBF,mBAAmB,CAACG,KAAK,GAAGH,mBAAmB,CAAC,CAAC,CAAC,CAACI,MAAM;EAC3D,MAAMC,qBAAqB,GAAGP,WAAW,CAACQ,MAAM,CAAC,OAAO,CAAC;EACzD,MAAMT,IAAI,GAAGC,WAAW,CAACS,SAAS,CAACL,gBAAgB,EAAEG,qBAAqB,CAAC;EAC3E,OAAOR,IAAI,CAACW,IAAI,EAAE;AACpB"},"metadata":{},"sourceType":"script"}