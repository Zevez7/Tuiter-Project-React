{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.factory = exports.name = exports.version = void 0;\nvar bs_logger_1 = require(\"bs-logger\");\nexports.version = 4;\nexports.name = 'hoist-jest';\nvar HOIST_METHODS = ['mock', 'unmock', 'enableAutomock', 'disableAutomock', 'deepUnmock'];\nvar JEST_GLOBALS_MODULE_NAME = '@jest/globals';\nvar JEST_GLOBAL_NAME = 'jest';\nfunction factory(_a) {\n  var configSet = _a.configSet;\n  var logger = configSet.logger.child({\n    namespace: exports.name\n  });\n  var ts = configSet.compilerModule;\n  var tsFactory = ts.factory ? ts.factory : ts;\n  var importNamesOfJestObj = [];\n  var isJestGlobalImport = function (node) {\n    return ts.isImportDeclaration(node) && ts.isStringLiteral(node.moduleSpecifier) && node.moduleSpecifier.text === JEST_GLOBALS_MODULE_NAME;\n  };\n  var shouldHoistExpression = function (node) {\n    if (ts.isCallExpression(node) && ts.isPropertyAccessExpression(node.expression) && HOIST_METHODS.includes(node.expression.name.text)) {\n      if (importNamesOfJestObj.length) {\n        return ts.isIdentifier(node.expression.expression) && importNamesOfJestObj.includes(node.expression.expression.text) || ts.isPropertyAccessExpression(node.expression.expression) && ts.isIdentifier(node.expression.expression.expression) && importNamesOfJestObj.includes(node.expression.expression.expression.text) || shouldHoistExpression(node.expression.expression);\n      } else {\n        return ts.isIdentifier(node.expression.expression) && node.expression.expression.text === JEST_GLOBAL_NAME || shouldHoistExpression(node.expression.expression);\n      }\n    }\n    return false;\n  };\n  var isHoistableStatement = function (node) {\n    return ts.isExpressionStatement(node) && shouldHoistExpression(node.expression);\n  };\n  var canHoistInBlockScope = function (node) {\n    return !!node.statements.find(function (stmt) {\n      return ts.isVariableStatement(stmt) && stmt.declarationList.declarations.find(function (decl) {\n        return ts.isIdentifier(decl.name) && decl.name.text !== JEST_GLOBAL_NAME;\n      }) && node.statements.find(function (stmt) {\n        return isHoistableStatement(stmt);\n      });\n    });\n  };\n  var sortStatements = function (statements) {\n    if (statements.length <= 1) {\n      return statements;\n    }\n    return statements.sort(function (stmtA, stmtB) {\n      return isJestGlobalImport(stmtA) || isHoistableStatement(stmtA) && !isHoistableStatement(stmtB) && !isJestGlobalImport(stmtB) ? -1 : 1;\n    });\n  };\n  var createVisitor = function (ctx, _) {\n    var visitor = function (node) {\n      var resultNode = ts.visitEachChild(node, visitor, ctx);\n      if (ts.isBlock(resultNode) && canHoistInBlockScope(resultNode)) {\n        var newNodeArrayStatements = tsFactory.createNodeArray(sortStatements(resultNode.statements));\n        return tsFactory.updateBlock(resultNode, newNodeArrayStatements);\n      } else {\n        if (ts.isSourceFile(resultNode)) {\n          resultNode.statements.forEach(function (stmt) {\n            var _a, _b;\n            if (isJestGlobalImport(stmt) && ((_a = stmt.importClause) === null || _a === void 0 ? void 0 : _a.namedBindings) && (ts.isNamespaceImport(stmt.importClause.namedBindings) || ts.isNamedImports(stmt.importClause.namedBindings))) {\n              var namedBindings = stmt.importClause.namedBindings;\n              var jestImportName = ts.isNamespaceImport(namedBindings) ? namedBindings.name.text : (_b = namedBindings.elements.find(function (element) {\n                var _a;\n                return element.name.text === JEST_GLOBAL_NAME || ((_a = element.propertyName) === null || _a === void 0 ? void 0 : _a.text) === JEST_GLOBAL_NAME;\n              })) === null || _b === void 0 ? void 0 : _b.name.text;\n              if (jestImportName) {\n                importNamesOfJestObj.push(jestImportName);\n              }\n            }\n          });\n          var newNodeArrayStatements = tsFactory.createNodeArray(sortStatements(resultNode.statements));\n          importNamesOfJestObj.length = 0;\n          return ts.factory ? ts.factory.updateSourceFile(resultNode, newNodeArrayStatements, resultNode.isDeclarationFile, resultNode.referencedFiles, resultNode.typeReferenceDirectives, resultNode.hasNoDefaultLib, resultNode.libReferenceDirectives) : ts.updateSourceFileNode(resultNode, newNodeArrayStatements, resultNode.isDeclarationFile, resultNode.referencedFiles, resultNode.typeReferenceDirectives, resultNode.hasNoDefaultLib, resultNode.libReferenceDirectives);\n        }\n        return resultNode;\n      }\n    };\n    return visitor;\n  };\n  return function (ctx) {\n    var _a;\n    return logger.wrap((_a = {}, _a[bs_logger_1.LogContexts.logLevel] = bs_logger_1.LogLevels.debug, _a.call = null, _a), 'visitSourceFileNode(): hoist jest', function (sf) {\n      return ts.visitNode(sf, createVisitor(ctx, sf));\n    });\n  };\n}\nexports.factory = factory;","map":{"version":3,"names":["Object","defineProperty","exports","value","factory","name","version","bs_logger_1","require","HOIST_METHODS","JEST_GLOBALS_MODULE_NAME","JEST_GLOBAL_NAME","_a","configSet","logger","child","namespace","ts","compilerModule","tsFactory","importNamesOfJestObj","isJestGlobalImport","node","isImportDeclaration","isStringLiteral","moduleSpecifier","text","shouldHoistExpression","isCallExpression","isPropertyAccessExpression","expression","includes","length","isIdentifier","isHoistableStatement","isExpressionStatement","canHoistInBlockScope","statements","find","stmt","isVariableStatement","declarationList","declarations","decl","sortStatements","sort","stmtA","stmtB","createVisitor","ctx","_","visitor","resultNode","visitEachChild","isBlock","newNodeArrayStatements","createNodeArray","updateBlock","isSourceFile","forEach","_b","importClause","namedBindings","isNamespaceImport","isNamedImports","jestImportName","elements","element","propertyName","push","updateSourceFile","isDeclarationFile","referencedFiles","typeReferenceDirectives","hasNoDefaultLib","libReferenceDirectives","updateSourceFileNode","wrap","LogContexts","logLevel","LogLevels","debug","call","sf","visitNode"],"sources":["/Users/ujjvalsharma/Desktop/sde-final-project/Tuiter-Project-React/node_modules/ts-jest/dist/transformers/hoist-jest.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = exports.name = exports.version = void 0;\nvar bs_logger_1 = require(\"bs-logger\");\nexports.version = 4;\nexports.name = 'hoist-jest';\nvar HOIST_METHODS = ['mock', 'unmock', 'enableAutomock', 'disableAutomock', 'deepUnmock'];\nvar JEST_GLOBALS_MODULE_NAME = '@jest/globals';\nvar JEST_GLOBAL_NAME = 'jest';\nfunction factory(_a) {\n    var configSet = _a.configSet;\n    var logger = configSet.logger.child({ namespace: exports.name });\n    var ts = configSet.compilerModule;\n    var tsFactory = ts.factory ? ts.factory : ts;\n    var importNamesOfJestObj = [];\n    var isJestGlobalImport = function (node) {\n        return (ts.isImportDeclaration(node) &&\n            ts.isStringLiteral(node.moduleSpecifier) &&\n            node.moduleSpecifier.text === JEST_GLOBALS_MODULE_NAME);\n    };\n    var shouldHoistExpression = function (node) {\n        if (ts.isCallExpression(node) &&\n            ts.isPropertyAccessExpression(node.expression) &&\n            HOIST_METHODS.includes(node.expression.name.text)) {\n            if (importNamesOfJestObj.length) {\n                return ((ts.isIdentifier(node.expression.expression) &&\n                    importNamesOfJestObj.includes(node.expression.expression.text)) ||\n                    (ts.isPropertyAccessExpression(node.expression.expression) &&\n                        ts.isIdentifier(node.expression.expression.expression) &&\n                        importNamesOfJestObj.includes(node.expression.expression.expression.text)) ||\n                    shouldHoistExpression(node.expression.expression));\n            }\n            else {\n                return ((ts.isIdentifier(node.expression.expression) && node.expression.expression.text === JEST_GLOBAL_NAME) ||\n                    shouldHoistExpression(node.expression.expression));\n            }\n        }\n        return false;\n    };\n    var isHoistableStatement = function (node) {\n        return ts.isExpressionStatement(node) && shouldHoistExpression(node.expression);\n    };\n    var canHoistInBlockScope = function (node) {\n        return !!node.statements.find(function (stmt) {\n            return ts.isVariableStatement(stmt) &&\n                stmt.declarationList.declarations.find(function (decl) { return ts.isIdentifier(decl.name) && decl.name.text !== JEST_GLOBAL_NAME; }) &&\n                node.statements.find(function (stmt) { return isHoistableStatement(stmt); });\n        });\n    };\n    var sortStatements = function (statements) {\n        if (statements.length <= 1) {\n            return statements;\n        }\n        return statements.sort(function (stmtA, stmtB) {\n            return isJestGlobalImport(stmtA) ||\n                (isHoistableStatement(stmtA) && !isHoistableStatement(stmtB) && !isJestGlobalImport(stmtB))\n                ? -1\n                : 1;\n        });\n    };\n    var createVisitor = function (ctx, _) {\n        var visitor = function (node) {\n            var resultNode = ts.visitEachChild(node, visitor, ctx);\n            if (ts.isBlock(resultNode) && canHoistInBlockScope(resultNode)) {\n                var newNodeArrayStatements = tsFactory.createNodeArray(sortStatements(resultNode.statements));\n                return tsFactory.updateBlock(resultNode, newNodeArrayStatements);\n            }\n            else {\n                if (ts.isSourceFile(resultNode)) {\n                    resultNode.statements.forEach(function (stmt) {\n                        var _a, _b;\n                        if (isJestGlobalImport(stmt) &&\n                            ((_a = stmt.importClause) === null || _a === void 0 ? void 0 : _a.namedBindings) &&\n                            (ts.isNamespaceImport(stmt.importClause.namedBindings) ||\n                                ts.isNamedImports(stmt.importClause.namedBindings))) {\n                            var namedBindings = stmt.importClause.namedBindings;\n                            var jestImportName = ts.isNamespaceImport(namedBindings)\n                                ? namedBindings.name.text\n                                : (_b = namedBindings.elements.find(function (element) { var _a; return element.name.text === JEST_GLOBAL_NAME || ((_a = element.propertyName) === null || _a === void 0 ? void 0 : _a.text) === JEST_GLOBAL_NAME; })) === null || _b === void 0 ? void 0 : _b.name.text;\n                            if (jestImportName) {\n                                importNamesOfJestObj.push(jestImportName);\n                            }\n                        }\n                    });\n                    var newNodeArrayStatements = tsFactory.createNodeArray(sortStatements(resultNode.statements));\n                    importNamesOfJestObj.length = 0;\n                    return ts.factory\n                        ? ts.factory.updateSourceFile(resultNode, newNodeArrayStatements, resultNode.isDeclarationFile, resultNode.referencedFiles, resultNode.typeReferenceDirectives, resultNode.hasNoDefaultLib, resultNode.libReferenceDirectives)\n                        : ts.updateSourceFileNode(resultNode, newNodeArrayStatements, resultNode.isDeclarationFile, resultNode.referencedFiles, resultNode.typeReferenceDirectives, resultNode.hasNoDefaultLib, resultNode.libReferenceDirectives);\n                }\n                return resultNode;\n            }\n        };\n        return visitor;\n    };\n    return function (ctx) {\n        var _a;\n        return logger.wrap((_a = {}, _a[bs_logger_1.LogContexts.logLevel] = bs_logger_1.LogLevels.debug, _a.call = null, _a), 'visitSourceFileNode(): hoist jest', function (sf) {\n            return ts.visitNode(sf, createVisitor(ctx, sf));\n        });\n    };\n}\nexports.factory = factory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}